# three top level root operation -> Query,Mutation, Subscription
# change data, creating, updating, deleting -> Mutation
# read data and keep connection open for when changes -> Subscription

scalar Date
scalar BigDecimal

input CoffeeInput {
    id: ID
    name: String
    size: Size
}

type Coffee {
    id: ID!
    name: String
    size: Size
}

enum Size {
    SHORT,
    TALL,
    GRANDE,
    VENTI
}

type Book {
    id: ID!
    title: String
    pages: Int
    rating: Rating
    author: Author
}

type Rating {
    rating: String
    star: String
}

type Author {
    id:ID!
    firstName: String
    lastName:String
    books: [Book]
}

type Person {
    id: ID!
    firstName: String
    lastName: String
    phoneNumber: String
    email: String
    address: Address
}

type Address {
    id: ID!
    address: String
    state: String
    city: String
    zip: String
}

type CustomerResponse {
    id : String
    fullName : String
    phoneNumber : String
    address : String
    createdAt : Date
    purchaseTransactions : [PurchaseTransactionResponse]
}

type PurchaseTransactionResponse {
    id : String
    paymentType : String
    amount : BigDecimal
    createdAt : Date
}